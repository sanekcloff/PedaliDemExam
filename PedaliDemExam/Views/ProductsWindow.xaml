<Window x:Class="PedaliDemExam.Views.ProductsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PedaliDemExam.Views"
        xmlns:vm="clr-namespace:PedaliDemExam.ViewModels"
        mc:Ignorable="d"
        Title="Окно просмотра товаров" Height="450" Width="800" Icon="/Assets/App/Icon.ico" FontFamily="Times New Roman">
    <Window.DataContext>
        <vm:ProductsWindowViewModel/>
    </Window.DataContext>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="60"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center" Grid.Row="0">

            <TextBlock x:Name="FullNameTextBlock" Margin="5" Text="FIO"/>
            <Button Margin="5" Content="Выйти" Command="{Binding LogoutCommand}"/>

        </StackPanel>

        <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">

            <Image Source="/Assets/App/Icon.png" Margin="5" Stretch="Uniform"/>

            <Button x:Name="AddProductButton" Content="Добавить" Height="50" Width="50" FontSize="10" Margin="5" Command="{Binding AddProductCommand}"/>

        </StackPanel>
        
        <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">

            <TextBox x:Name="SearchTextBox" Text="{Binding SearchValue, UpdateSourceTrigger=PropertyChanged}" Width="150" Margin="5" Height="30"/>

            <ComboBox x:Name="SortComboBox" Width="150" Margin="5" Height="30" ItemsSource="{Binding SortValues}" SelectedValue="{Binding SortValue}"/>
            
            <ComboBox x:Name="FilthComboBox" Width="150" Margin="5" Height="30" ItemsSource="{Binding FilthValues}" SelectedValue="{Binding FilthValue}"/>

        </StackPanel>

        <ListView Grid.Row="2" ItemsSource="{Binding Products}" SelectedItem="{Binding SelectedProduct, UpdateSourceTrigger=PropertyChanged}">

            <ListView.InputBindings>
                <KeyBinding Key="Delete" Command="{Binding DeleteProductCommand}"/>
            </ListView.InputBindings>

            <ListView.ItemContainerStyle>

                <Style TargetType="ListViewItem">
                    <Setter Property="Background" Value="{StaticResource SecondaryColor}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListViewItem">
                                <Border Margin="10" Background="{TemplateBinding Background}">
                                    
                                    <Border.InputBindings>
                                        <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding DataContext.UpdateProductCommand, RelativeSource={RelativeSource AncestorType=ListView}}"/>
                                    </Border.InputBindings>
                                    
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="80"/>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="80"/>
                                        </Grid.ColumnDefinitions>

                                        <Image Source="{Binding ImageUrl}" Margin="10"/>

                                        <StackPanel Orientation="Vertical" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Column="1" Margin="10">

                                            <TextBlock Text="{Binding CategoryAndTitle}" FontWeight="Bold"/>
                                            <TextBlock Text="{Binding Description, StringFormat=Описание товара: {0}}"/>
                                            <TextBlock Text="{Binding Manufacturer.Title, StringFormat=Производитель: {0}}"/>
                                            <TextBlock Text="{Binding Provider.Title, StringFormat=Поставщик: {0}}"/>
                                            <TextBlock x:Name="WithoutDiscount" Text="{Binding Price, StringFormat=Цена: {0:C}}"/>
                                            <TextBlock x:Name="WithDiscount" Text="{Binding DiscountPrice, StringFormat=Цена: {0:C}}" Foreground="Red" Visibility="Collapsed"/>
                                            <TextBlock Text="{Binding UnitOfMeasurement, StringFormat=Единица измерения: {0}}"/>
                                            <TextBlock Text="{Binding CountOnStorage, StringFormat=Количество на складе: {0}}"/>

                                        </StackPanel>

                                        <TextBlock Text="{Binding Discount, StringFormat={}{0} %}" Grid.Column="2" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="10"/>

                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <DataTrigger Binding="{Binding IsDiscountGreaterThen0}" Value="True">
                                        <Setter TargetName="WithDiscount" Property="Visibility" Value="Visible"/>
                                        <Setter TargetName="WithoutDiscount" Property="TextDecorations" Value="Strikethrough"/>
                                    </DataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsDiscountGreaterThen15}" Value="True">
                            <Setter Property="Background" Value="{StaticResource DiscountColor}"/>
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource AccentColor}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
                
            </ListView.ItemContainerStyle>
            
        </ListView>

    </Grid>
    
</Window>
